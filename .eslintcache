[{"D:\\Instagram\\instagram-clone\\src\\index.js":"1","D:\\Instagram\\instagram-clone\\src\\App.js":"2","D:\\Instagram\\instagram-clone\\src\\Post.js":"3","D:\\Instagram\\instagram-clone\\src\\firebase.js":"4","D:\\Instagram\\instagram-clone\\src\\ImageUpload.js":"5"},{"size":200,"mtime":1608838268320,"results":"6","hashOfConfig":"7"},{"size":6086,"mtime":1609067447137,"results":"8","hashOfConfig":"7"},{"size":748,"mtime":1608978062663,"results":"9","hashOfConfig":"7"},{"size":634,"mtime":1608977772818,"results":"10","hashOfConfig":"7"},{"size":887,"mtime":1609066205803,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"7clyqv",{"filePath":"15","messages":"16","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"14"},"D:\\Instagram\\instagram-clone\\src\\index.js",[],["26","27"],"D:\\Instagram\\instagram-clone\\src\\App.js",["28","29","30","31"],"import react , { useState, useEffect} from 'react';\nimport './App.css';\nimport Post from './Post';\nimport {auth, db} from './firebase';\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Button,Input } from '@material-ui/core';\nimport ImageUpload from './ImageUpload';\nimport InstagramEmbed from 'react-instagram-embed';\n\n\n\n\n\n\n  \n\nfunction getModalStyle() {\n  const top = 50;\n  const left =50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\n\n\n\nfunction App() {\n\n    \n    const classes =useStyles();\n\n    const [modalStyle] = useState(getModalStyle);\n \n    const [posts, setPosts] =useState([]);\n    const [open, setOpen] =useState(false);\n\n\n    const [openSignIn , setOpenSignIn] =useState(false);\n     \n    /*\n    input Field\n    \n    */\n      const [username, setUsername] =useState('');\n      const [password, setPassword] =useState('');\n      const [email, setEmail] =useState('');\n\n      const [user,setUser] =useState(null);\n    \n\n      useEffect(() =>  {\n       const unsubscribe= auth.onAuthStateChanged((authUser) =>{\n        \n        if(authUser){\n          //user logged in\n          console.log(authUser);\n          setUser(authUser);\n          \n        }else{\n          \n            //user logged out\n            setUser(null);\n          }\n        })\n\nreturn() =>{\n  unsubscribe();\n}\n\n      }, [user,username]);\n\n\n     \n\n\n\n  \n /* //useeffect =>runs a peace of code based specific condition*/\n  useEffect(() => {\n    db.collection('posts').onSnapshot(snapshot =>{\n     setPosts(snapshot.docs.map(doc => ({ \n       \n      id: doc.id,\n      post: doc.data()\n    \n    })));\n    })\n\n  },[]);\n\n\n\n\n  const signUp =(event) =>{\n\n    event.preventDefault();\n    auth.createUserWithEmailAndPassword(email, password)\n\n     .then((authUser) =>{\n\n      authUser.user.updateProfile({\n       displayName:username\n      })\n     })\n    .catch((error) => alert(error.message))\n    setOpen(false);\n\n  }\n       \n     const signIn=(event)  =>{\n\n      event.preventDefault();\n      auth.signInWithEmailAndPassword(email,password)\n      .catch((error) => alert(error.message))\n      setOpenSignIn(false);\n     }\n\n\n\n      \n  return (\n\n    <div className=\"app\">\n\n     \n\n   {/* i want to have*/}\n    {/* caption input*/}\n     {/* file piker*/}\n      {/* post button*/}\n\n    \n\n\n\n\n\n\n\n\n    \n    <Modal\n    open={open}\n    onClose={() => setOpen(false)}\n    >\n   <div style={modalStyle} className={classes.paper}>\n    \n     <form className=\"app__signup\">\n     <center>\n     <img className =\"app_HeaderImage\"\n       src =\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n       alt=\"\"\n       />\n      </center>\n\n      <input\n       placeholder =\"username\"\n       type =\"text\"\n       value ={username}\n       onChange ={(e) => setUsername(e.target.value)}\n       \n      /> \n       \n       <input\n       placeholder =\"email\"\n       type =\"text\"\n       value ={email}\n       onChange ={(e) => setEmail(e.target.value)}\n       \n      /> \n\n      <input\n       placeholder =\"password\"\n       type =\"password\"\n       value ={password}\n       onChange ={(e) => setPassword(e.target.value)} \n      /> \n\n\n   \n\n      <Button type =\"submit\" onClick ={() => setOpen(true)}>Sign Up</Button>\n\n      </form>\n       </div>\n       \n       </Modal>\n\n\n\n\n                    \n    <Modal\n    open={openSignIn}\n    onClose={() => setOpenSignIn(false)}\n    >\n   <div style={modalStyle} className={classes.paper}>\n    \n     <form className=\"app__signup\">\n     <center>\n     <img className =\"app_HeaderImage\"\n       src =\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n       alt=\"\"\n       />\n      </center>\n\n    \n       \n       <input\n       placeholder =\"email\"\n       type =\"text\"\n       value ={email}\n       onChange ={(e) => setEmail(e.target.value)}\n       \n      /> \n\n      <input\n       placeholder =\"password\"\n       type =\"password\"\n       value ={password}\n       onChange ={(e) => setPassword(e.target.value)} \n      /> \n\n\n   \n\n      <Button type =\"submit\" onClick ={() => setOpen(true)}>Sign IN</Button>\n\n      </form>\n       </div>\n       \n       </Modal>\n\n\n\n\n\n\n\n\n     \n    <div className =\"app_header\">\n     \n     <img className =\"app_HeaderImage\"\n       src =\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\"\n       alt=\"\"\n       />\n\n          {user ?(\n\n          <Button  onClick ={() => auth.signOut()}>logout</Button>\n          ):(\n\n            <div className=\"App__loginContainer\">\n              <Button onClick ={() => setOpen(true)}>Sign In</Button>\n              <Button onClick ={() => setOpen(true)}>Sign Up</Button>\n            \n\n         \n\n      </div>\n      )  }\n</div>\n    \n\n\n        \n     \n  \n       \n  \n\n     \n\n\n     \n\n     {/* All posts comes here*/}\n\n     <div className=\"app__posts\">\n     <div className=\"app_post_left\">\n     {\n      posts.map(({id, post})=>(\n        <Post key={id} username ={post.username} caption={post.caption} imageUrl={post.imageUrl} />\n      ))\n     } \n     </div>\n     \n\n        \n        <div className=\"app_post_right\">\n\n        <InstagramEmbed\n            url='https://images.unsplash.com/photo-1518609878373-06d740f60d8b?ixid=MXwxMjA3fDB8MHxzZWFyY2h8Mjh8fHRvcHxlbnwwfHwwfA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=400&q=60'\n            clientAccessToken='123|456'\n            maxWidth={320}\n            hideCaption={false}\n            containerTagName='div'\n            protocol=''\n            injectScript\n            onLoading={() => {}}\n            onSuccess={() => {}}\n            onAfterRender={() => {}}\n            onFailure={() => {}}\n          />\n\n        </div>\n \n    \n  \n   \n   \n\n   </div>\n   <ImageUpload/>\n   </div> \n   \n   \n  );\n}\n\nexport default App;\n","D:\\Instagram\\instagram-clone\\src\\Post.js",["32"],"import React from 'react'\r\nimport './Post.css';\r\nimport Avatar from \"@material-ui/core/Avatar\"\r\n\r\nfunction Post({username, caption , imageUrl} ) {\r\n    return (\r\n        <div className =\"post\">\r\n           <div className =\"post__header\">\r\n\r\n           <Avatar\r\n           className =\"post_avatar\"\r\n           alt=\"__sublimed\"\r\n           src=\"\"\r\n           />\r\n\r\n           <h3>{username}</h3>\r\n            {/*header => avatar=>username*/}\r\n            </div>\r\n\r\n             {/* image*/}\r\n            <img className =\"post_image\" src={imageUrl}/>\r\n              {/*username caption*/}\r\n             <h4 className =\"post_text\" > <strong>{username}</strong><br/>{caption} </h4>\r\n\r\n             \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n\r\n\r\n","D:\\Instagram\\instagram-clone\\src\\firebase.js",[],"D:\\Instagram\\instagram-clone\\src\\ImageUpload.js",["33","34","35","36"],"import React, { useState } from 'react';\r\nimport {input, Button } from \"@material-ui/core\";\r\nimport './imageUpload.css';\r\n\r\n\r\nfunction Imageupload() {\r\n\r\n     const [caption,setCaption] =useState('');\r\n     const [progress, setProgress] =useState(0);\r\n     const [image, setImage]=useState(null);\r\n\r\n     const handleChange =(e) =>{\r\n\r\n        if(e.target.files[0]){\r\n        setImage(e.target.files[0]);\r\n\r\n        }\r\n     };\r\n\r\n     const handleUpload =() =>{\r\n\r\n     }\r\n    return (\r\n        <div className=\"imageupload\">\r\n\r\n        \r\n            \r\n            <input type=\"text\" placeholder='Enter A caption' onChange={event =>setCaption(event.target.value)} />\r\n            <input type =\"file\" onChange={handleChange}/>\r\n            <Button onClick={handleUpload}>\r\n\r\n            upload\r\n            </Button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Imageupload;\r\n",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":8,"nodeType":"43","messageId":"44","endLine":1,"endColumn":13},{"ruleId":"41","severity":1,"message":"45","line":8,"column":17,"nodeType":"43","messageId":"44","endLine":8,"endColumn":22},{"ruleId":"41","severity":1,"message":"46","line":112,"column":9,"nodeType":"43","messageId":"44","endLine":112,"endColumn":15},{"ruleId":"41","severity":1,"message":"47","line":128,"column":12,"nodeType":"43","messageId":"44","endLine":128,"endColumn":18},{"ruleId":"48","severity":1,"message":"49","line":21,"column":13,"nodeType":"50","endLine":21,"endColumn":58},{"ruleId":"41","severity":1,"message":"51","line":8,"column":13,"nodeType":"43","messageId":"44","endLine":8,"endColumn":20},{"ruleId":"41","severity":1,"message":"52","line":9,"column":13,"nodeType":"43","messageId":"44","endLine":9,"endColumn":21},{"ruleId":"41","severity":1,"message":"53","line":9,"column":23,"nodeType":"43","messageId":"44","endLine":9,"endColumn":34},{"ruleId":"41","severity":1,"message":"54","line":10,"column":13,"nodeType":"43","messageId":"44","endLine":10,"endColumn":18},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'signUp' is assigned a value but never used.","'signIn' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'caption' is assigned a value but never used.","'progress' is assigned a value but never used.","'setProgress' is assigned a value but never used.","'image' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]